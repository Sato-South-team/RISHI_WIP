<Application x:Class="RISHI_WIP.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RISHI_WIP"
              Startup="StartUP">
    <Application.Resources>
        <Style x:Key="LampadaThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="FrameworkElement.Height" Value="20"/>
            <Setter Property="FrameworkElement.Width" Value="20"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas Margin="0,0,0,0" SnapsToDevicePixels="true">
                            <Border Margin="0,0,0,0" CornerRadius="0,0,200,200" Canvas.Left="0" Height="40" Width="20"
                      Background="White" Canvas.Top="-20.768"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.IsTabStop" Value="false"/>
            <Setter Property="UIElement.Focusable" Value="false"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LampadaSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Control.Background" Value="Black"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                            <Grid>
                                <Canvas Margin="-1,-6">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                             Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"
                             Visibility="Hidden" Width="4.0"/>
                                </Canvas>
                                <Track x:Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{DynamicResource LampadaThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextblockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.FontFamily" Value="Times New Roman"/>
            <Setter Property="TextBlock.FontSize" Value="28"/>
            <Setter Property="TextBlock.FontWeight" Value="DemiBold"/>
            <Setter Property="TextBlock.Foreground" Value="Navy"/>
            <Setter Property="FrameworkElement.Height" Value="auto"/>
            <Setter Property="FrameworkElement.Width" Value="auto"/>
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="Control.FontWeight" Value="DemiBold"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.Height" Value="25"/>
            <Setter Property="FrameworkElement.Width" Value="auto"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Control.BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Control.BorderBrush" Value="Black"/>
        </Style>
        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="Control.FontWeight" Value="DemiBold"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="FrameworkElement.Height" Value="25"/>
            <Setter Property="FrameworkElement.Width" Value="auto"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Control.BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Control.BorderBrush" Value="Black"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="Control.FontWeight" Value="DemiBold"/>
            <Setter Property="Control.BorderBrush" Value="Gray"/>
            <Setter Property="Control.BorderThickness" Value="2"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="FrameworkElement.Margin" Value="5,0,0,0"/>
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="Control.FontWeight" Value="DemiBold"/>
            <Setter Property="Control.Foreground" Value="Navy"/>
            <Setter Property="FrameworkElement.Height" Value="30"/>
            <Setter Property="FrameworkElement.Width" Value="Auto"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Right"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="Control.FontWeight" Value="DemiBold"/>
            <Setter Property="Control.Foreground" Value="Navy"/>
            <Setter Property="FrameworkElement.Height" Value="30"/>
            <Setter Property="FrameworkElement.Width" Value="Auto"/>
            <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
            <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Border.BorderBrush" Value="Black"/>
            <Setter Property="Border.CornerRadius" Value="20"/>
            <Setter Property="Border.BorderThickness" Value="2"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Control.FontSize" Value="18"/>
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.Background" Value="Teal"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Control.FontWeight" Value="DemiBold"/>
            <Setter Property="FrameworkElement.Width" Value="auto"/>
            <Setter Property="FrameworkElement.Height" Value="auto"/>
            <Setter Property="FrameworkElement.Margin" Value="5,0,0,0"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="Black" BorderThickness="2" Background="{TemplateBinding Control.Background}"
                    CornerRadius="100,50,100,50">
                            <Border BorderBrush="Black" BorderThickness="2" Background="White" CornerRadius="200,200,200,250">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter Property="Control.Background" Value="White"/>
                                <Setter Property="Control.Foreground" Value="Teal"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuButton" TargetType="{x:Type Button}">
            <Setter Property="Control.FontSize" Value="56"/>
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.BorderBrush" Value="#00000000"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Control.FontWeight" Value="Bold"/>
            <Setter Property="FrameworkElement.Width" Value="auto"/>
            <Setter Property="FrameworkElement.Height" Value="89"/>
            <Setter Property="Control.FontStyle" Value="Italic"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Button FontSize="28" Height="89">
                            <Control.Background>
                                <ImageBrush ImageSource="/USL_PC;component/Images/Glass-Panel-PNG-File.png"/>
                            </Control.Background>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="true">
                                <Setter Property="Control.Background" Value="White"/>
                                <Setter Property="Control.Foreground" Value="Blue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SubMenuButton" TargetType="{x:Type Button}">
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.BorderBrush" Value="Black"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Control.FontWeight" Value="Bold"/>
            <Setter Property="Control.FontStyle" Value="Italic"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border VerticalAlignment="Center" HorizontalAlignment="Center" Width="300" Height="130">
                            <Border.Background>
                                <ImageBrush ImageSource="/RISHI_WIP;component/Images/SubManu.png"/>
                            </Border.Background>
                            <TextBlock Text="{TemplateBinding ContentControl.Content}" TextAlignment="Center" HorizontalAlignment="Center"
                         VerticalAlignment="Center" TextWrapping="Wrap" Width="170">
                <FrameworkElement.Style>
                  <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                      <Trigger Property="UIElement.IsMouseOver" Value="true">
                        <Setter Property="TextBlock.Foreground" Value="Teal"/>
                        <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
                      </Trigger>
                    </Style.Triggers>
                  </Style>
                </FrameworkElement.Style>
                            </TextBlock>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="Lavender" CornerRadius="10, 10, 10, 10" BorderBrush="Red" BorderThickness="6">
                            <StackPanel IsItemsHost="true"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.BorderBrush" Value="Black"/>
            <Setter Property="Control.BorderThickness" Value="0,0,1,1"/>
            <Setter Property="FrameworkElement.Height" Value="auto"/>
            <Setter Property="ContentControl.ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WrapText" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Control.Background}">
                            <ContentPresenter HorizontalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="true">
                    <Setter Property="Control.Background" Value="#FF5B5BBA"/>
                    <Setter Property="Control.BorderBrush" Value="Black"/>
                    <Setter Property="Control.Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.Background" Value="White"/>
            <Setter Property="Control.Foreground" Value="Navy"/>
            <Setter Property="Control.FontWeight" Value="ExtraBold"/>
            <Setter Property="FrameworkElement.Width" Value="auto"/>
            <Setter Property="FrameworkElement.Height" Value="auto"/>
            <Setter Property="Control.BorderBrush" Value="Black"/>
            <Setter Property="Control.BorderThickness" Value="2"/>
            <Setter Property="DataGrid.AutoGenerateColumns" Value="false"/>
            <Setter Property="DataGrid.RowHeaderWidth" Value="0"/>
            <Setter Property="DataGrid.IsReadOnly" Value="true"/>
        </Style>
        <Style x:Key="ComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border CornerRadius="10" BorderThickness="2" Background="{TemplateBinding Control.Background}"
                      BorderBrush="Black">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Control.FontFamily" Value="Calibri"/>
            <Setter Property="Control.FontSize" Value="15"/>
            <Setter Property="Control.FontWeight" Value="DemiBold"/>
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="ComboBox.IsEditable" Value="true"/>
            <Setter Property="FrameworkElement.Height" Value="35"/>
            <Setter Property="FrameworkElement.Margin" Value="2,0,0,0"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MaxWidth="18"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Name="PART_EditableTextBox" Padding="5,0,0,0" VerticalContentAlignment="Center"
                       Height="{TemplateBinding FrameworkElement.Height}"/>
                            <ToggleButton Grid.Column="1" Margin="0" Height="{TemplateBinding FrameworkElement.Height}"
                            Background="#FFE0761D" Focusable="false" ClickMode="Press"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Path Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0,0 L 4,4 8,0 Z"
                      Fill="Black"/>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                     AllowsTransparency="true" Focusable="false" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="true"
                      MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1" CornerRadius="5" Background="White" BorderBrush="Black"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="true">
                                        <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PageStyle" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="{Binding}"/>
            <Setter Property="Margin" Value="0,0,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type Window}">
                        <Border Width="auto" Height="auto" CornerRadius="90,90,80,80" Margin="0,0,0,0" Background="Teal" BorderBrush="Black"
                    BorderThickness="4">
                            <Grid>

                                    <Grid ToolTip="Log Out" MouseLeftButtonUp="Grid_MouseLeftButtonUp_1" VerticalAlignment="Top" HorizontalAlignment="Right" Height="35" Width="35"
                      Margin="15,0,57,0">
                                    <Panel.Background>
                                        <ImageBrush ImageSource="/RISHI_WIP;component/Images/LogOut.png"/>
                                    </Panel.Background>
                                </Grid>
                                <TextBlock Text="GREENPRO WIP SYSTEM" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top"
                           FontSize="25" FontFamily="Calibri" FontWeight="ExtraBold"/>
                                <Border Background="White" Width="auto" Height="auto" Margin="5,30,5,5" CornerRadius="0,0,0,0"
                        BorderThickness="4">
                                    <Grid>
                                        <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="{Binding}" Height="{Binding}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox x:Name="PART_TextBox" Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                     Width="{Binding}"
                     Text="{Binding Path=Text, StringFormat='dd MMM yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="styleCalendar" TargetType="{x:Type Calendar}">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <Viewbox Height="400" Width="400">
                            <CalendarItem x:Name="PART_CalendarItem" Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"/>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>